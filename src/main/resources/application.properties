spring.application.name=Cridir

# Database - Use environment variables
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}?sslmode=require&user=${PGUSER}&password=${PGPASSWORD}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:eslam}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:eslam}
spring.datasource.driver-class-name=org.postgresql.Driver
# Force PostgreSQL dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT - Use environment variable
jwt.secret=${JWT_SECRET:default-fallback-secret}
jwt.expiration=36000000

# CORS - Use environment variable
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Logging
server.error.include-message=never
server.error.include-stacktrace=never
logging.level.org.springframework=INFO
logging.level.com.NTG.Cridir=DEBUG

# Mail - Use environment variables
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create}